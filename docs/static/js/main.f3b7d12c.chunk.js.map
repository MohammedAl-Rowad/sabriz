{"version":3,"sources":["store/store.ts","store/selectors.ts","components/common/MarkDown.tsx","components/ChannelBar/index.tsx","hooks/useDarkMode.jsx","components/TopNavigation/index.tsx","components/ContentContainer/index.tsx","constants.ts","components/SideBar/yupCodeAdderSchema.ts","components/SideBar/CodeAdder.tsx","components/SideBar/defaultMarkDown.ts","components/SideBar/CodeQuestionList.tsx","components/SideBar/index.tsx","database/index.ts","database/schema.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStore","create","set","codeEditorOpen","db","metaData","dataFromHost","setMetaData","data","prevState","setDataFromHost","setCodeEditorOpen","f","setDB","codeEditorFlagToggler","store","storeDB","getDB","setDataFromHostFun","setMetaDataFunc","getMetaData","MarkDown","markdown","className","children","remarkPlugins","remarkGfm","components","h1","node","props","h2","h3","h4","h5","h6","a","rel","code","inline","ref","match","exec","String","replace","style","nord","language","PreTag","ChannelBar","allDataFromHost","markDown","question","memo","useDarkMode","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useLocalStorage","enabled","setEnabled","isEnabled","enabledState","useEffect","bodyClass","document","body","classList","add","remove","ThemeIcon","darkTheme","setDarkTheme","onClick","size","HashtagIcon","Title","host","peer","TopNavigation","ContentContainer","editor","setEditor","useMount","CodeMirror","fromTextArea","getElementById","lineNumbers","keyMap","theme","mode","setOption","type","name","defaultChecked","id","getValue","innerHTML","brython","MAIN_COLLECTION","SIGNAL_CODE","schema","yup","title","required","testCases","of","shape","input","output","CodeAdder","toogleCodeAdderOpen","useForm","resolver","yupResolver","register","handleSubmit","control","errors","formState","useFieldArray","fields","append","setMarkDown","onSubmit","Promise","all","toast","collections","insert","v4","then","s","findOne","catch","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","clsx","onChange","target","map","field","index","placeholder","CodeQuestionList","onCodeListToggle","useList","questionsList","filter","getQuestions","useCallback","find","documents","doc","toJSON","list","filterQuestionsDebounced","useDebouncedCallback","toLowerCase","includes","onDelete","success","other","src","createAvatar","seed","dataUri","alt","length","event","CustomEvent","detail","dispatchEvent","singleOtherPeerAboutQuestion","SideBarIcon","icon","text","Divider","SideBar","useBoolean","open","toggleOpen","codeListOpen","toggleCodeListOpen","codeAdderOpen","globalPeer","setPeer","textareaRef","useRef","onCodeEditorToggle","hidden","rows","offer","current","SimplePeer","initiator","trickle","signal","on","err","renegotiate","transceiverRequest","parsedData","addEventListener","send","addPouchPlugin","pouchdbAdapterIdb","MAIN_COLLECTION_SCHEMA","version","description","primaryKey","properties","toPass","default","items","display","App","createRxDatabase","storage","getRxStoragePouch","addCollections","defaultSize","width","height","maxWidth","minWidth","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4VAIaA,E,MAAWC,IAKtB,SAACC,GAAD,MAAU,CACVC,gBAAgB,EAChBC,GAAI,KACJC,SAAU,GACVC,aAAc,GACdC,YAAa,SAACC,GAAD,OACXN,GAAI,SAACO,GAAD,MAAuB,CACzBJ,SAAS,2BAAMI,EAAUJ,UAAaG,QAE1CE,gBAAiB,SAACJ,GAAD,OACfJ,GAAI,SAACO,GAAD,MAAuB,CACzBH,aAAa,2BAAMG,EAAUH,cAAiBA,QAElDK,kBAAmB,SAACC,GAAD,OAAgBV,EAAI,CAAEC,eAAgBS,KACzDC,MAAO,SAACT,GAAD,OAAoBF,EAAI,CAAEE,YCrBtBU,EAAwB,SAACC,GAAD,OAAkBA,EAAMJ,mBAIhDK,EAAU,SAACD,GAAD,OAAkBA,EAAMF,OAClCI,EAAQ,SAACF,GAAD,OAAkBA,EAAMX,IAChCE,EAAe,SAACS,GAAD,OAAkBA,EAAMT,cAEvCY,EAAqB,SAACH,GAAD,OAAkBA,EAAML,iBAE7CS,EAAkB,SAACJ,GAAD,OAAkBA,EAAMR,aAC1Ca,EAAc,SAACL,GAAD,OAAkBA,EAAMV,U,iLC4CpCgB,EApDE,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,SAClB,OACE,cAAC,IAAD,CACEC,UAAU,sCACVC,SAAUF,EACVG,cAAe,CAACC,KAChBC,WAAY,CACVC,GADU,YACa,EAAlBC,KAAmB,IAAVC,EAAS,iBACrB,OAAO,4CAAIP,UAAU,YAAeO,GAA7B,IAAoC,qBAE7CC,GAJU,YAIa,EAAlBF,KAAmB,IAAVC,EAAS,iBACrB,OAAO,4CAAIP,UAAU,YAAeO,GAA7B,IAAoC,qBAE7CE,GAPU,YAOa,EAAlBH,KAAmB,IAAVC,EAAS,iBACrB,OAAO,4CAAIP,UAAU,YAAeO,GAA7B,IAAoC,qBAE7CG,GAVU,YAUa,EAAlBJ,KAAmB,IAAVC,EAAS,iBACrB,OAAO,4CAAIP,UAAU,WAAcO,GAA5B,IAAmC,qBAE5CI,GAbU,YAaa,EAAlBL,KAAmB,IAAVC,EAAS,iBACrB,OAAO,4CAAIP,UAAU,WAAcO,GAA5B,IAAmC,qBAE5CK,GAhBU,YAgBa,EAAlBN,KAAmB,IAAVC,EAAS,iBACrB,OAAO,4CAAIP,UAAU,aAAgBO,GAA9B,IAAqC,qBAE9CM,EAnBU,YAmBY,EAAlBP,KAAmB,IAAVC,EAAS,iBACpB,OAEE,aADA,CACA,iBAAGP,UAAU,0BAA0Bc,IAAI,cAAiBP,KAGhEQ,KAzBU,YAyBiD,EAApDT,KAAqD,IAA/CU,EAA8C,EAA9CA,OAAQhB,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,SAAkBM,GAAS,EAAjBU,IAAiB,kBACnDC,EAAQ,iBAAiBC,KAAKnB,GAAa,IACjD,OAAQgB,GAAUE,EAChB,cAAC,IAAD,aACEjB,SAAUmB,OAAOnB,GAAUoB,QAAQ,MAAO,IAC1CC,MAAOC,IACPC,SAAUN,EAAM,GAChBO,OAAO,OACHlB,IAGN,8CAAMP,UAAWA,GAAeO,GAAhC,aACGN,UC5CTyB,EAAa,WAAO,IAAD,EACjBC,EAAkBlD,EAASM,GAC3B6C,EAAQ,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAiBE,gBAApB,aAAG,EAA2B9B,SAC5C,OACE,qBAAKC,UAAU,sDAAf,SACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,EAAD,CAAUD,SAAU6B,SAMbE,iBAAKJ,G,yBCyBLK,EAdK,WAClB,MA1BsB,SAACC,EAAKC,GAC5B,MAAsCC,oBAAS,WAC7C,IACE,IAAMC,EAAOC,OAAOC,aAAaC,QAAQN,GACzC,OAAOG,EAAOI,KAAKC,MAAML,GAAQF,EACjC,MAAOQ,GAEP,OADAC,QAAQC,IAAIF,GACLR,MANX,mBAAOW,EAAP,KAAoBC,EAApB,KAqBA,MAAO,CAACD,EAXS,SAACE,GAChB,IACE,IAAMC,EAAeD,aAAiBE,SAAWF,EAAMF,GAAeE,EAEtED,EAAeE,GAEfX,OAAOC,aAAaY,QAAQjB,EAAKO,KAAKW,UAAUH,IAChD,MAAON,GACPC,QAAQC,IAAIF,MAOcU,CAAgB,cAA9C,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAoC,qBAAjBC,cAAgCH,EASzD,OAPAI,qBAAU,WACR,IAAMxD,EAAY,OACZyD,EAAYrB,OAAOsB,SAASC,KAAKC,UAEvCN,EAAYG,EAAUI,IAAI7D,GAAayD,EAAUK,OAAO9D,KACvD,CAACoD,EAASE,IAEN,CAACF,EAASC,IClBbU,EAAY,WAChB,MAAkChC,IAAlC,mBAAOiC,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAMC,QAFW,kBAAMD,GAAcD,IAErC,SACGA,EACC,cAAC,IAAD,CAAOG,KAAK,KAAKnE,UAAU,wBAE3B,cAAC,IAAD,CAAQmE,KAAK,KAAKnE,UAAU,2BAM9BoE,EAAc,kBAAM,cAAC,IAAD,CAAWD,KAAK,KAAKnE,UAAU,mBACnDqE,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACZ,oBAAIvE,UAAU,2CAAd,SACGsE,EAAO,OAASC,EAAO,OAAS,oCAItBC,EApCO,WACpB,MAAuB/F,EAASoB,GAAxByE,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAEd,OACE,sBAAKvE,UAAU,iBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAOsE,KAAMA,EAAMC,KAAMA,IACzB,cAAC,EAAD,IAGA,cAAC,IAAD,CAAYJ,KAAK,KAAKnE,UAAU,2C,sDCgEvByE,EAnEU,WACvB,MAA4BvC,mBAAoC,MAAhE,mBAAOwC,EAAP,KAAeC,EAAf,KAEAC,aAAS,WACP,IAAMF,EAA6BG,IAAWC,aAC5CpB,SAASqB,eAAe,eACxB,CACEC,aAAa,EACbC,OAAQ,UACRC,MAAO,OACPC,KAAM,WAIVR,EAAUD,MAcZ,OACE,sBAAK1E,UAAU,kDAAf,UACE,cAAC,EAAD,IACA,wBAAOA,UAAU,2CAAjB,UACE,uBACEkE,QAAS,WACD,OAANQ,QAAM,IAANA,KAAQU,UAAU,OAAQ,WAE5BC,KAAK,QACLrF,UAAU,4BACVsF,KAAK,QACLxC,MAAM,SACNyC,gBAAc,IAEhB,sBAAMvF,UAAU,OAAhB,uBAEF,wBAAOA,UAAU,2CAAjB,UACE,uBACEkE,QAAS,WACD,OAANQ,QAAM,IAANA,KAAQU,UAAU,OAAQ,eAE5BC,KAAK,QACLrF,UAAU,4BACVsF,KAAK,QACLxC,MAAM,eAER,sBAAM9C,UAAU,OAAhB,2BAEF,0BAAUwF,GAAG,gBACb,wBACEtB,QAzCU,WACd,IAAMnD,EAAI,OAAG2D,QAAH,IAAGA,OAAH,EAAGA,EAAQe,WACjB1E,IACA2C,SAASqB,eAAe,UAA0BW,UAAY3E,EAGhE4E,YAoCE3F,UAAU,kIAFZ,0B,2FCrEO4F,GAAkB,SAClBC,GAAc,c,4BCCdC,GAASC,KAAW,CAC/BC,MAAOD,OAAaE,WACpBlG,SAAUgG,OAAaE,WACvBC,UAAWH,OAERI,GACCJ,OAEGK,MAAM,CACLC,MAAON,OAAaE,WACpBK,OAAQP,OAAaE,cAG1BA,a,mBC6IUM,GA5IG,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,oBACnB,EAKIC,aAAQ,CAAEC,SAAUC,aAAYb,MAJlCc,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,QACaC,EAJf,EAIEC,UAAaD,OAGf,EAA2BE,aAAc,CACvCH,UACAxB,KAAM,cAFA4B,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAKhB,EAAgCjF,mBC7BlB,koBD6Bd,mBAAOnC,EAAP,KAAiBqH,EAAjB,KACMvI,EAAiBJ,EAASiB,GAEhC,EAAkBqC,IAAXqB,EAAP,oBAEMiE,EAAQ,uCAAG,WAAOpI,GAAP,iBAAA4B,EAAA,sEACWyG,QAAQC,IAAI,CAAC,2CADxB,oCACNC,EADM,KACNA,OACH,WAAY,CAAEtC,MAAO9B,EAAU,OAAS,UAC9CvE,EAAG4I,YAAH,OAAgCC,OAAhC,aACElC,GAAImC,gBACD1I,IAEF2I,MAAK,SAACC,GACL,OAAOhJ,EAAG4I,YAAH,OAAgCK,QACrC,wCACA3G,UAEHyG,KAAKlF,QAAQC,KACboF,MAAMrF,QAAQD,OAbF,2CAAH,sDAgBd,OACE,sBAAKzC,UAAU,+DAAf,UACE,cAAC,kBAAD,CACEgI,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,IAEd,qBAAKxI,UAAU,iCAAf,SACE,qBACEA,UAAU,gCACVkE,QAASsC,EAFX,SAIE,cAAC,IAAD,CAAgBrC,KAAK,WAGzB,oBACEnE,UAAWyI,YAAK,WAAY,CAC1B,eAAgB,OAAC1B,QAAD,IAACA,OAAD,EAACA,EAAQf,OACzB,kBAAiB,OAACe,QAAD,IAACA,OAAD,EAACA,EAAQf,SAH9B,kCAQA,yBACEhG,UAAWyI,YACT,wDACA,CAAE,oBAAmB,OAAC1B,QAAD,IAACA,OAAD,EAACA,EAAQf,SAHlC,SAME,iDACMY,EAAS,UADf,IAEEvB,KAAK,OACLrF,UAAU,qGAGd,oBACEA,UAAWyI,YAAK,WAAY,CAC1B,eAAgB,OAAC1B,QAAD,IAACA,OAAD,EAACA,EAAQhH,UACzB,kBAAiB,OAACgH,QAAD,IAACA,OAAD,EAACA,EAAQhH,YAH9B,iCAQA,0BAASC,UAAU,yBAAnB,UACE,yBAASA,UAAU,oDAAnB,SACE,oDACM4G,EAAS,aADf,IAEE9D,MAAO/C,EACP2I,SAAU,YAA4B,IAAf5F,EAAc,EAAxB6F,OAAU7F,MACrBsE,EAAYtE,IAEd9C,UAAU,iHAGd,yBAASA,UAAU,iEAAnB,SACE,cAAC,EAAD,CAAUD,SAAUA,SAGvBmH,EAAO0B,KAAI,SAACC,EAAOC,GAAR,mBACV,0BAAS9I,UAAU,mCAAnB,UACE,+CACEA,UAAWyI,YACT,gGACA,CAAE,oBAAmB,OAAC1B,QAAD,IAACA,GAAD,UAACA,EAAQb,iBAAT,iBAAC,EAAoB4C,UAArB,aAAC,EAA4BzC,UAEhDO,EAAS,aAAD,OAAckC,EAAd,YALd,IAMEC,YAAY,WAEd,+CACE/I,UAAWyI,YACT,gGACA,CAAE,oBAAmB,OAAC1B,QAAD,IAACA,GAAD,UAACA,EAAQb,iBAAT,iBAAC,EAAoB4C,UAArB,aAAC,EAA4BxC,WAEhDM,EAAS,aAAD,OAAckC,EAAd,aALd,IAMEC,YAAY,cAf2CF,EAAMrD,OAmBnE,yBAASxF,UAAU,mCAAnB,SACE,wBACEkE,QAAS,WACPiD,EAAO,CAAEd,MAAO,GAAIC,OAAQ,MAE9BtG,UAAU,kIAJZ,gCASF,yBAASA,UAAU,mCAAnB,SACE,wBACEkE,QAAS2C,EAAaQ,GACtBrH,UAAU,kIAFZ,wB,sEE/HFgJ,GAAmB,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,iBACpBpK,EAAiBJ,EAASiB,GAEhC,EAAyCwJ,eAAzC,mBAAOC,EAAP,YAAwBxK,EAAxB,EAAwBA,IAAKyK,EAA7B,EAA6BA,OACvBC,EAAeC,uBAAY,WAC/BzK,EAAG4I,YAAH,OAAgC8B,OAC7BpI,OACAyG,MAAK,SAAC4B,GAAD,OAAeA,EAAUZ,KAAI,SAACa,GAAD,OAASA,EAAIC,eAC/C9B,MAAK,SAAC+B,GAAD,OAAUhL,EAAIgL,QACrB,CAAC9K,EAAG4I,YAAa9I,IACdiL,EAA2BC,cAC/B,YAA4B,IAAf/G,EAAc,EAAxB6F,OAAU7F,MACNA,EAIHsG,GAAO,qBAAGpD,MACF8D,cAAcC,SAASjH,EAAMgH,kBAHrCT,MAOJ,KAGFzE,YAASyE,GACT,MAAkBtH,IAAXqB,EAAP,oBAEM4G,EAAQ,uCAAG,WAAOxE,GAAP,iBAAA3E,EAAA,sEACS,yCADT,gBACP2G,EADO,EACPA,MACR3I,EAAG4I,YAAH,OAAgCK,QAAQtC,GACrC1B,SACA8D,KAAKyB,GACLzB,MAAK,WACJJ,EAAMyC,QAAQ,gBAAiB,CAAE/E,MAAO9B,EAAU,OAAS,aAE5D2E,OAAM,WACLP,EAAM/E,MAAM,sCAAuC,CACjDyC,MAAO9B,EAAU,OAAS,aAVjB,2CAAH,sDAsBd,OACE,sBAAKpD,UAAU,+DAAf,UACE,cAAC,kBAAD,CACEgI,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,IAEd,qBAAKxI,UAAU,iCAAf,SACE,qBACEA,UAAU,gCACVkE,QAAS+E,EAFX,SAIE,cAAC,IAAD,CAAgB9E,KAAK,WAGzB,oBAAInE,UAAU,sBAAd,uCACA,yBAASA,UAAU,yBAAnB,SACE,uBACEqF,KAAK,OACL0D,YAAY,SACZL,SAAUkB,EACV5J,UAAU,oGAGd,yBAASA,UAAU,yBAAnB,gBACGmJ,QADH,IACGA,OADH,EACGA,EAAeP,KAAI,YAA8C,IAA3C5C,EAA0C,EAA1CA,MAAOR,EAAmC,EAAnCA,GAAIU,EAA+B,EAA/BA,UAAcgE,EAAiB,kBAC/D,OACE,gCACE,qBAAKlK,UAAU,iCAAf,SACE,qBACEA,UAAU,gCACVkE,QAAS,kBAAM8F,EAASxE,IAF1B,SAIE,cAAC,IAAD,CAAcrB,KAAK,KAAKnE,UAAU,qBAGtC,sBAAKA,UAAU,yFAAf,UACE,qBAAKA,UAAU,OAAf,SACE,qBACEA,UAAU,oDACVmK,IAAKC,wBAAa9I,GAAO,CACvB+I,KAAMrE,EACNsE,SAAS,IAGXC,IAAKvE,MAGT,sBAAKhG,UAAU,cAAf,UACE,mBAAGA,UAAU,oCAAb,SAAkDgG,IAClD,qBAAKhG,UAAU,+GAAf,SACE,sBAAKA,UAAU,2DAAf,8BACoBkG,EAAUsE,eAIlC,wBACEtG,QAAS,kBAtEY,SAACrC,GACpC,IAAM4I,EAAQ,IAAIC,YAAiB7E,GAAa,CAC9C8E,OAAQ,CAAE9I,cAEZ6B,SAASkH,cAAcH,GAmEPI,CAA6B,2BACxBX,GADuB,IAE1B1E,KACAQ,QACAE,gBAGJlG,UAAU,wIATZ,kDA7BMwF,YAsDP1D,kBAAKkH,IC+Cd8B,GAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASC,YAAT,MAAgB,uBAAhB,EAA8B9G,EAA9B,EAA8BA,QAA9B,OAClB,sBAAKlE,UAAU,qBAAqBkE,QAASA,GAAoB,KAAjE,UACG6G,EACD,sBAAM/K,UAAU,wCAAhB,SAAyDgL,QAIvDC,GAAU,kBAAM,oBAAIjL,UAAU,gBAErBkL,GA/LC,WACd,MAA2BC,aAAW,GAAtC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA2CF,aAAW,GAAtD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA6CJ,aAAW,GAAxD,mBAAOK,EAAP,KAAsBhF,EAAtB,KACA,EAA8BtE,mBAAqC,MAAnE,mBAAOuJ,EAAP,KAAmBC,EAAnB,KACMtM,EAAoBX,EAASc,GAC7BJ,EAAkBV,EAASkB,GAC3BX,EAAcP,EAASmB,GACvB+L,EAAcC,mBACpB,EAAkB7J,IAAXqB,EAAP,oBAEMyI,EAAqB,WACzBrF,IACApH,GAAmBoM,GACnBD,GAAmB,IAGftC,EAAmB,WACvBzC,GAAoB,GACpBpH,GAAmBkM,GACnBC,KAGF,OACE,sBACEvL,UAAWyI,YACT,qFACA,CACE,QAAS2C,IAASI,IAAkBF,EACpC,OAAQF,IAASI,IAAkBF,EACnC,WAAYE,GAAiBF,IANnC,UAUE,yBAAStL,UAAWyI,YAAK,CAAEqD,OAAQN,GAAiBF,IAApD,SACGF,EACC,sBAAKpL,UAAU,MAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,gCACVkE,QAASmH,EAFX,SAIE,cAAC,IAAD,CAAgBlH,KAAK,WAGzB,0BACEnE,UAAWyI,YACT,sHACA,CAAE,aAAcrF,EAAS,cAAeA,IAE1C2F,YAAY,uBACZgD,KAAM,GACN9K,IAAK0K,IAEP,qBAAK3L,UAAU,mBAAf,SACE,qBACEA,UAAU,gCACVkE,QAAS,WAAO,IAAD,EACblF,EAAY,CAAEuF,MAAM,IACpB,IAAMyH,EAAK,UAAIL,EAAYM,eAAhB,aAAG,EAA8BnJ,MAEtCyB,EAAOkH,GAET,IAAIS,KAAW,CACbC,WAAW,EACXC,SAAS,IAEf7H,EAAK8H,OAAO9J,KAAKC,MAAMwJ,IAElBP,IACHlH,EAAK+H,GAAG,SAAS,SAACC,GAAD,OAAS7J,QAAQC,IAAI,QAAS4J,MAC/ChI,EAAK+H,GAAG,UAAU,SAACrN,GACbA,EAAKuN,aAAevN,EAAKwN,oBAG7B/J,QAAQC,IAAI,SAAUJ,KAAKW,UAAUjE,OAGvCsF,EAAK+H,GAAG,WAAW,WACjB5J,QAAQC,IAAI,cAcd4B,EAAK+H,GAAG,QAAQ,SAACrN,GACf,IACE,IAAMyN,EAAanK,KAAKC,MAAMvD,GAC9BE,EAAgBuN,GAChB,gBA1CV,SA+CE,cAAC,IAAD,WAKN,qCACE,cAAC,GAAD,CACE3B,KAAM,cAAC,IAAD,CAAe5G,KAAK,OAC1BD,QAAO,sBAAE,4BAAArD,EAAA,sDACP7B,EAAY,CAAEsF,MAAM,IACdC,EAAO,IAAI2H,KAAW,CAE1BC,WAAW,EACXC,SAAS,IAEXV,EAAQnH,GACRA,EAAK+H,GAAG,SAAS,SAACC,GAAD,OAAS7J,QAAQC,IAAI,QAAS4J,MAC/ChI,EAAK+H,GAAG,UAAU,SAACrN,GACbA,EAAKuN,aAAevN,EAAKwN,oBAG7B/J,QAAQC,IAAI,SAAUJ,KAAKW,UAAUjE,OAGvCsF,EAAK+H,GAAG,WAAW,WACjB5J,QAAQC,IAAI,cAOde,SAASiJ,iBACP9G,IACA,YAAuC,IAApC8E,EAAmC,EAAnCA,OACDpG,EAAKqI,KACHrK,KAAKW,UAAU,CACbrB,SAAU8I,EAAO9I,SACjBwD,KL7JQ,oBKmKhBd,EAAK+H,GAAG,QAAQ,SAACrN,GACfyD,QAAQC,IAAI,SAAW1D,MArClB,2CAwCT+L,KAAK,mCAEP,cAAC,GAAD,IACA,cAAC,GAAD,CACEA,KAAK,4BACL9G,QAASmH,EACTN,KAAM,cAAC,IAAD,CAAQ5G,KAAK,SAErB,cAAC,GAAD,CACE4G,KAAM,cAAC,IAAD,CAAa5G,KAAK,OACxBD,QAAS2H,EACTb,KAAK,gCAEP,cAAC,GAAD,CACEA,KAAK,qDACL9G,QAAS+E,EACT8B,KAAM,cAAC,IAAD,CAAY5G,KAAK,SAEzB,cAAC,GAAD,IACA,cAAC,GAAD,CACE4G,KAAM,cAAC,IAAD,CAAqB5G,KAAK,OAChC6G,KAAK,oBAKZM,GAAgB,cAAC,GAAD,CAAkBrC,iBAAkBA,IACpDuC,GAAiB,cAAC,GAAD,CAAWhF,oBAAqBqF,Q,8DChMxDgB,aAAeC,MAER,ICNMC,GAAyB,CACpC/G,MAAO,mBACPgH,QAAS,EACTC,YAAa,iCACbC,WAAY,KACZ7H,KAAM,SACN8H,WAAY,CACV3H,GAAI,CACFH,KAAM,UAERW,MAAO,CACLX,KAAM,UAERtF,SAAU,CACRsF,KAAM,UAER+H,OAAQ,CACN/H,KAAM,UACNgI,QAAS,KAEXnH,UAAW,CACTb,KAAM,QAGNiI,MAAO,CACLjI,KAAM,SACN8H,WAAY,CACV9G,MAAO,CACLhB,KAAM,UAERiB,OAAQ,CACNjB,KAAM,cAMhBY,SAAU,CAAC,QAAS,WAAY,c,UCvBrB3E,GAAQ,CACnBiM,QAAS,QA6CIC,GAvCH,WACV,IAAMlO,EAAQb,EAASgB,GAevB,OAbAmF,aAAS,WFlBe6I,aAAiB,CACvCnI,KAAMM,GACN8H,QAASC,aAAkB,SEkBxB/F,MAAK,SAAC/I,GACLS,EAAMT,GACNA,EAAG+O,eAAH,eACGhI,GAAkB,CACjBE,OAAQiH,SAIbhF,MAAMrF,QAAQD,UAIjB,sBAAKzC,UAAU,OAAf,UACE,cAAC,GAAD,IACA,sBAAKA,UAAU,8BAAf,UACE,cAAC,KAAD,CACEsB,MAAOA,GACPuM,YAAa,CACXC,MAAO,MACPC,OAAQ,SAEVC,SAAS,MACTC,SAAS,MAPX,SASE,cAAC,EAAD,MAEF,qBAAK3M,MAAO,CAAE2M,SAAU,IAAMjO,UAAU,SAAxC,SACE,cAAC,EAAD,aCvCKkO,GAZS,SAACC,GACnBA,GAAeA,aAAuBnL,UACxC,8BAAqB4E,MAAK,YAAkD,IAA/CwG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,OCHdM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFjL,SAASqB,eAAe,SAM1BmJ,O","file":"static/js/main.f3b7d12c.chunk.js","sourcesContent":["import create, { GetState, SetState, StoreApi } from 'zustand'\r\nimport { RxDatabase } from 'rxdb'\r\nimport { Store } from './types'\r\n\r\nexport const useStore = create<\r\n  Store,\r\n  SetState<object>,\r\n  GetState<Store>,\r\n  StoreApi<any>\r\n>((set) => ({\r\n  codeEditorOpen: false,\r\n  db: null,\r\n  metaData: {},\r\n  dataFromHost: {},\r\n  setMetaData: (data: any) =>\r\n    set((prevState: Store) => ({\r\n      metaData: { ...prevState.metaData, ...data },\r\n    })),\r\n  setDataFromHost: (dataFromHost: any) =>\r\n    set((prevState: Store) => ({\r\n      dataFromHost: { ...prevState.dataFromHost, ...dataFromHost },\r\n    })),\r\n  setCodeEditorOpen: (f: boolean) => set({ codeEditorOpen: f }),\r\n  setDB: (db: RxDatabase) => set({ db }),\r\n}))\r\n","import { Store } from './types'\r\n\r\nexport const codeEditorFlagToggler = (store: Store) => store.setCodeEditorOpen\r\n\r\nexport const codeEditorIsOpen = (store: Store) => store.codeEditorOpen\r\n\r\nexport const storeDB = (store: Store) => store.setDB\r\nexport const getDB = (store: Store) => store.db\r\nexport const dataFromHost = (store: Store) => store.dataFromHost\r\n\r\nexport const setDataFromHostFun = (store: Store) => store.setDataFromHost\r\n\r\nexport const setMetaDataFunc = (store: Store) => store.setMetaData\r\nexport const getMetaData = (store: Store) => store.metaData\r\n\r\n","import ReactMarkdown from 'react-markdown'\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\r\nimport { nord } from 'react-syntax-highlighter/dist/esm/styles/prism'\r\nimport remarkGfm from 'remark-gfm'\r\n\r\nconst MarkDown = ({ markdown }: { markdown: string }) => {\r\n  return (\r\n    <ReactMarkdown\r\n      className=\"dark:text-white max-h-screen w-full\"\r\n      children={markdown}\r\n      remarkPlugins={[remarkGfm]}\r\n      components={{\r\n        h1({ node, ...props }) {\r\n          return <h1 className=\"text-4xl\" {...props} aria-hidden />\r\n        },\r\n        h2({ node, ...props }) {\r\n          return <h2 className=\"text-3xl\" {...props} aria-hidden />\r\n        },\r\n        h3({ node, ...props }) {\r\n          return <h3 className=\"text-2xl\" {...props} aria-hidden />\r\n        },\r\n        h4({ node, ...props }) {\r\n          return <h4 className=\"text-xl\" {...props} aria-hidden />\r\n        },\r\n        h5({ node, ...props }) {\r\n          return <h5 className=\"text-lg\" {...props} aria-hidden />\r\n        },\r\n        h6({ node, ...props }) {\r\n          return <h6 className=\"text-base\" {...props} aria-hidden />\r\n        },\r\n        a({ node, ...props }) {\r\n          return (\r\n            // eslint-disable-next-lin \r\n            <a className=\"underline text-blue-400\" rel=\"noreferrer\" {...props} />\r\n          )\r\n        },\r\n        code({ node, inline, className, children, ref, ...props }) {\r\n          const match = /language-(\\w+)/.exec(className || '')\r\n          return !inline && match ? (\r\n            <SyntaxHighlighter\r\n              children={String(children).replace(/\\n$/, '')}\r\n              style={nord}\r\n              language={match[1]}\r\n              PreTag=\"div\"\r\n              {...props}\r\n            />\r\n          ) : (\r\n            <code className={className} {...props}>\r\n              {children}\r\n            </code>\r\n          )\r\n        },\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MarkDown\r\n","import { memo } from 'react'\r\nimport { useStore, dataFromHost } from '../../store'\r\nimport MarkDown from '../common/MarkDown'\r\n\r\nconst ChannelBar = () => {\r\n  const allDataFromHost = useStore(dataFromHost)\r\n  const markDown = allDataFromHost?.question?.markdown\r\n  return (\r\n    <div className=\"channel-bar shadow-lg h-screen w-full overflow-auto\">\r\n      <div className=\"channel-container\">\r\n        <MarkDown markdown={markDown} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(ChannelBar)\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (value) => {\r\n    try {\r\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n\r\n      setStoredValue(valueToStore);\r\n\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n};\r\n\r\nconst useDarkMode = () => {\r\n  const [enabled, setEnabled] = useLocalStorage('dark-theme');\r\n  const isEnabled = typeof enabledState === 'undefined' && enabled;\r\n\r\n  useEffect(() => {\r\n    const className = 'dark';\r\n    const bodyClass = window.document.body.classList;\r\n\r\n    isEnabled ? bodyClass.add(className) : bodyClass.remove(className);\r\n  }, [enabled, isEnabled]);\r\n\r\n  return [enabled, setEnabled];\r\n};\r\n\r\nexport default useDarkMode;\r\n","import { FaHashtag, FaMoon, FaSun } from 'react-icons/fa'\r\nimport { AiFillFire } from 'react-icons/ai'\r\nimport useDarkMode from '../../hooks/useDarkMode'\r\nimport { useStore, getMetaData } from '../../store'\r\n\r\nconst TopNavigation = () => {\r\n  const { host, peer } = useStore(getMetaData)\r\n\r\n  return (\r\n    <div className=\"top-navigation\">\r\n      <HashtagIcon />\r\n      <Title host={host} peer={peer} />\r\n      <ThemeIcon />\r\n      {/* <Search /> */}\r\n      {/* <BellIcon /> */}\r\n      <AiFillFire size=\"24\" className=\"top-navigation-icon text-green-600\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ThemeIcon = () => {\r\n  const [darkTheme, setDarkTheme] = useDarkMode()\r\n  const handleMode = () => setDarkTheme(!darkTheme)\r\n  return (\r\n    <span onClick={handleMode}>\r\n      {darkTheme ? (\r\n        <FaSun size=\"24\" className=\"top-navigation-icon\" />\r\n      ) : (\r\n        <FaMoon size=\"24\" className=\"top-navigation-icon\" />\r\n      )}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst HashtagIcon = () => <FaHashtag size=\"20\" className=\"title-hashtag\" />\r\nconst Title = ({ host, peer }: any) => (\r\n  <h5 className=\"title-text text-green-500 font-extrabold\">\r\n    {host ? 'HOST' : peer ? 'PEER' : '🧗‍♂️'}\r\n  </h5>\r\n)\r\n\r\nexport default TopNavigation\r\n","import { useState } from 'react'\r\nimport TopNavigation from '../TopNavigation'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport { useMount } from 'react-use'\r\nimport 'codemirror/theme/nord.css'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/python/python'\r\nimport 'codemirror/keymap/sublime'\r\nimport CodeMirror, { EditorFromTextArea } from 'codemirror'\r\n\r\ndeclare var brython: () => void\r\n\r\nconst ContentContainer = () => {\r\n  const [editor, setEditor] = useState<EditorFromTextArea | null>(null)\r\n\r\n  useMount(() => {\r\n    const editor: EditorFromTextArea = CodeMirror.fromTextArea(\r\n      document.getElementById('code-editor') as HTMLTextAreaElement,\r\n      {\r\n        lineNumbers: true,\r\n        keyMap: 'sublime',\r\n        theme: 'nord',\r\n        mode: 'python',\r\n      }\r\n    )\r\n\r\n    setEditor(editor)\r\n  })\r\n  // [1,2,3,4]@3@21\r\n  const runCode = () => {\r\n    const code = editor?.getValue()\r\n    if (code) {\r\n      ;(document.getElementById('rowadz') as HTMLElement).innerHTML = code\r\n      // ;(document.getElementById('rowadz') as HTMLElement).append('\\nsoul(list_=[1,2,3,4], target=2)')\r\n      // comes from cdn\r\n      brython()\r\n      // eval(code)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-container h-screen w-full overflow-auto\">\r\n      <TopNavigation />\r\n      <label className=\"inline-flex items-center dark:text-white\">\r\n        <input\r\n          onClick={() => {\r\n            editor?.setOption('mode', 'python')\r\n          }}\r\n          type=\"radio\"\r\n          className=\"form-radio text-green-500\"\r\n          name=\"radio\"\r\n          value=\"python\"\r\n          defaultChecked\r\n        />\r\n        <span className=\"ml-2\">Python</span>\r\n      </label>\r\n      <label className=\"inline-flex items-center dark:text-white\">\r\n        <input\r\n          onClick={() => {\r\n            editor?.setOption('mode', 'javascript')\r\n          }}\r\n          type=\"radio\"\r\n          className=\"form-radio text-green-500\"\r\n          name=\"radio\"\r\n          value=\"javascript\"\r\n        />\r\n        <span className=\"ml-2\">JavaScript</span>\r\n      </label>\r\n      <textarea id=\"code-editor\" />\r\n      <button\r\n        onClick={runCode}\r\n        className=\"w-1/4 bg-green-600 hover:bg-green-400 text-white font-bold py-2 px-4 border-b-4 border-green-700 hover:border-green-500 rounded\"\r\n      >\r\n        Run Code\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContentContainer\r\n","export const MAIN_COLLECTION = 'sabriz'\r\nexport const SIGNAL_CODE = 'SIGNAL_CODE'\r\nexport const SENDING_QUESTION = 'SIGNAL_CODE'","import * as yup from 'yup'\r\n\r\nexport const schema = yup.object({\r\n  title: yup.string().required(),\r\n  markdown: yup.string().required(),\r\n  testCases: yup\r\n    .array()\r\n    .of(\r\n      yup\r\n        .object()\r\n        .shape({\r\n          input: yup.string().required(),\r\n          output: yup.string().required(),\r\n        })\r\n    )\r\n    .required(),\r\n})\r\n","import { useState } from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { v4 } from 'uuid'\r\nimport defaultVal from './defaultMarkDown'\r\nimport { useStore, getDB } from '../../store'\r\nimport { MAIN_COLLECTION } from '../../constants'\r\nimport { RxDatabase } from 'rxdb'\r\nimport { useForm, useFieldArray } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { schema } from './yupCodeAdderSchema'\r\nimport clsx from 'clsx'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport useDarkMode from '../../hooks/useDarkMode'\r\nimport MarkDown from '../common/MarkDown'\r\n\r\nconst CodeAdder = ({ toogleCodeAdderOpen }: any) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm({ resolver: yupResolver(schema) })\r\n\r\n  const { fields, append } = useFieldArray({\r\n    control,\r\n    name: 'testCases',\r\n  })\r\n\r\n  const [markdown, setMarkDown] = useState(defaultVal)\r\n  const db: RxDatabase = useStore(getDB) as RxDatabase\r\n\r\n  const [enabled] = useDarkMode()\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const [{ toast }] = await Promise.all([import('react-toastify')])\r\n    toast('Created!', { theme: enabled ? 'dark' : 'light' })\r\n    db.collections[MAIN_COLLECTION].insert({\r\n      id: v4(),\r\n      ...data,\r\n    })\r\n      .then((s) => {\r\n        return db.collections[MAIN_COLLECTION].findOne(\r\n          '50125ddf-e412-4277-a46b-f18ea6adb06f'\r\n        ).exec()\r\n      })\r\n      .then(console.log)\r\n      .catch(console.error)\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-screen bg-white dark:bg-gray-900 overflow-auto pl-32 pr-32\">\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <div className=\"flex justify-end mr-5 h-5 mb-2\">\r\n        <div\r\n          className=\"sidebar-icon margin ml-0 mr-0\"\r\n          onClick={toogleCodeAdderOpen}\r\n        >\r\n          <AiOutlineClose size=\"28\" />\r\n        </div>\r\n      </div>\r\n      <h2\r\n        className={clsx('text-3xl', {\r\n          'text-white': !!!errors?.title,\r\n          'text-red-600': !!errors?.title,\r\n        })}\r\n      >\r\n        Enter Question Title\r\n      </h2>\r\n      <section\r\n        className={clsx(\r\n          'border-dashed border-2 border-light-blue-500 h-20 p-1',\r\n          { 'border-red-600': !!errors?.title }\r\n        )}\r\n      >\r\n        <input\r\n          {...register('title')}\r\n          type=\"text\"\r\n          className=\"w-full h-full shadow appearance-none border rounded text-5xl dark:bg-gray-900 dark:text-white\"\r\n        />\r\n      </section>\r\n      <h2\r\n        className={clsx('text-3xl', {\r\n          'text-white': !!!errors?.markdown,\r\n          'text-red-600': !!errors?.markdown,\r\n        })}\r\n      >\r\n        Enter Question Text\r\n      </h2>\r\n      <section className=\"grid grid-cols-2 gap-1\">\r\n        <section className=\"border-dashed border-2 border-light-blue-500  p-1\">\r\n          <textarea\r\n            {...register('markdown')}\r\n            value={markdown}\r\n            onChange={({ target: { value } }) => {\r\n              setMarkDown(value)\r\n            }}\r\n            className=\"p-1 w-full h-full shadow appearance-none border rounded dark:bg-gray-900 dark:text-white border-green-500\"\r\n          />\r\n        </section>\r\n        <section className=\"border-dashed border-2 border-light-blue-500 p-1 overflow-auto\">\r\n          <MarkDown markdown={markdown} />\r\n        </section>\r\n      </section>\r\n      {fields.map((field, index) => (\r\n        <section className=\"grid grid-cols-2 gap-1 mt-5 mb-5\" key={field.id}>\r\n          <input\r\n            className={clsx(\r\n              'w-full h-full shadow appearance-none border rounded text-5xl dark:bg-gray-900 dark:text-white',\r\n              { 'border-red-600': !!errors?.testCases?.[index]?.input }\r\n            )}\r\n            {...register(`testCases.${index}.input`)}\r\n            placeholder=\"Input\"\r\n          />\r\n          <input\r\n            className={clsx(\r\n              'w-full h-full shadow appearance-none border rounded text-5xl dark:bg-gray-900 dark:text-white',\r\n              { 'border-red-600': !!errors?.testCases?.[index]?.output }\r\n            )}\r\n            {...register(`testCases.${index}.output`)}\r\n            placeholder=\"Output\"\r\n          />\r\n        </section>\r\n      ))}\r\n      <section className=\"grid grid-cols-1 gap-1 mt-1 mb-1\">\r\n        <button\r\n          onClick={() => {\r\n            append({ input: '', output: '' })\r\n          }}\r\n          className=\"w-1/4 bg-green-600 hover:bg-green-400 text-white font-bold py-2 px-4 border-b-4 border-green-700 hover:border-green-500 rounded\"\r\n        >\r\n          Add Input/Output\r\n        </button>\r\n      </section>\r\n      <section className=\"grid grid-cols-1 gap-1 mt-1 mb-1\">\r\n        <button\r\n          onClick={handleSubmit(onSubmit)}\r\n          className=\"w-1/4 bg-green-600 hover:bg-green-400 text-white font-bold py-2 px-4 border-b-4 border-green-700 hover:border-green-500 rounded\"\r\n        >\r\n          Save\r\n        </button>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CodeAdder\r\n","const defaultVal = `# Title\r\n\r\n👉 Changes are re-rendered as you type.\r\n\r\n👈 Try writing some markdown on the left.\r\n\r\n## Overview\r\n\r\n* link to the creator github profile [here](https://github.com/MohammedAl-Rowad)\r\n\r\n## Syntax highlighting\r\n\r\n\\`\\`\\`js\r\nconst myFunc = (...args) => {\r\n  alert(3)\r\n  return {name: 'rowadz', age: 23}\r\n}\r\n\\`\\`\\`\r\n\r\n## Code to start with\r\n\r\n\\`\\`\\`py\r\nfrom collections import Counter, defaultdict\r\nfrom browser import alert\r\n\r\ndef soul(*args):\r\n  alert('u can alert here')\r\n  c = Counter(args)\r\n  d = defaultdict(lambda: ['name01', 'name02'])\r\n  print(c, d['names'])\r\n  \r\nsoul('d', 'c', 'a', 'a', 'a', 'w', 'c')\r\n\\`\\`\\`\r\n`\r\n\r\nexport default defaultVal\r\n","import { memo, useCallback } from 'react'\r\nimport { AiOutlineClose, AiFillDelete } from 'react-icons/ai'\r\nimport { useList, useMount } from 'react-use'\r\nimport { RxDatabase } from 'rxdb'\r\nimport { createAvatar } from '@dicebear/avatars'\r\nimport { MAIN_COLLECTION, SIGNAL_CODE } from '../../constants'\r\nimport { getDB, useStore } from '../../store'\r\nimport { useDebouncedCallback } from 'use-debounce'\r\nimport * as style from '@dicebear/avatars-identicon-sprites'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport useDarkMode from '../../hooks/useDarkMode'\r\n\r\nexport interface CodeQuestionListInterface {\r\n  onCodeListToggle: () => void\r\n}\r\n\r\n// onCodeListToggle={onCodeListToggle}\r\n\r\nconst CodeQuestionList = ({ onCodeListToggle }: CodeQuestionListInterface) => {\r\n  const db: RxDatabase = useStore(getDB) as RxDatabase\r\n  // TODO:: create type\r\n  const [questionsList, { set, filter }] = useList<any[]>()\r\n  const getQuestions = useCallback(() => {\r\n    db.collections[MAIN_COLLECTION].find()\r\n      .exec()\r\n      .then((documents) => documents.map((doc) => doc.toJSON()))\r\n      .then((list) => set(list))\r\n  }, [db.collections, set])\r\n  const filterQuestionsDebounced = useDebouncedCallback(\r\n    ({ target: { value } }) => {\r\n      if (!value) {\r\n        // can't use the reset from useList here\r\n        getQuestions()\r\n      } else {\r\n        filter(({ title }: any) =>\r\n          title.toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      }\r\n    },\r\n    200\r\n  )\r\n\r\n  useMount(getQuestions)\r\n  const [enabled] = useDarkMode()\r\n\r\n  const onDelete = async (id: string) => {\r\n    const { toast } = await import('react-toastify')\r\n    db.collections[MAIN_COLLECTION].findOne(id)\r\n      .remove()\r\n      .then(getQuestions)\r\n      .then(() => {\r\n        toast.success('SOFT DELETED!', { theme: enabled ? 'dark' : 'light' })\r\n      })\r\n      .catch(() => {\r\n        toast.error('Something went wrong while deleting', {\r\n          theme: enabled ? 'dark' : 'light',\r\n        })\r\n      })\r\n  }\r\n\r\n  const singleOtherPeerAboutQuestion = (question: any) => {\r\n    const event = new CustomEvent<any>(SIGNAL_CODE, {\r\n      detail: { question },\r\n    } as CustomEventInit<any>)\r\n    document.dispatchEvent(event)\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-screen bg-white dark:bg-gray-900 overflow-auto pl-32 pr-32\">\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <div className=\"flex justify-end mr-5 h-5 mb-2\">\r\n        <div\r\n          className=\"sidebar-icon margin ml-0 mr-0\"\r\n          onClick={onCodeListToggle}\r\n        >\r\n          <AiOutlineClose size=\"28\" />\r\n        </div>\r\n      </div>\r\n      <h2 className=\"text-3xl text-white\">All the created questions</h2>\r\n      <section className=\"border-dashed h-20 p-1\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"filter\"\r\n          onChange={filterQuestionsDebounced}\r\n          className=\"w-full h-full shadow appearance-none border rounded text-5xl dark:bg-gray-900 dark:text-white\"\r\n        />\r\n      </section>\r\n      <section className=\"grid grid-cols-3 gap-1\">\r\n        {questionsList?.map(({ title, id, testCases, ...other }: any) => {\r\n          return (\r\n            <div key={id}>\r\n              <div className=\"flex justify-end mr-5 h-5 mb-2\">\r\n                <div\r\n                  className=\"sidebar-icon margin ml-0 mr-0\"\r\n                  onClick={() => onDelete(id)}\r\n                >\r\n                  <AiFillDelete size=\"28\" className=\"text-red-400\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full bg-gray-900 rounded-lg sahdow-lg p-12 flex flex-col justify-center items-center\">\r\n                <div className=\"mb-8\">\r\n                  <img\r\n                    className=\"object-center object-cover rounded-full h-36 w-36\"\r\n                    src={createAvatar(style, {\r\n                      seed: title,\r\n                      dataUri: true,\r\n                      // ... and other options\r\n                    })}\r\n                    alt={title}\r\n                  />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <p className=\"text-xl text-white font-bold mb-2\">{title}</p>\r\n                  <div className=\"flex justify-center items-center m-1 font-medium py-1 px-2  rounded-full text-white border border-green-300 \">\r\n                    <div className=\"text-xs font-normal leading-none max-w-full flex-initial\">\r\n                      Test Cases Count {testCases.length}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  onClick={() =>\r\n                    singleOtherPeerAboutQuestion({\r\n                      ...other,\r\n                      id,\r\n                      title,\r\n                      testCases,\r\n                    })\r\n                  }\r\n                  className=\"w-3/6 mt-4\tbg-green-600 hover:bg-green-400 text-white font-bold py-2 px-4 border-b-4 border-green-700 hover:border-green-500 rounded\"\r\n                >\r\n                  Send to the other peer to solve\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n\r\n        {/* <section className=\"border-dashed border-2 border-light-blue-500 p-1 overflow-auto\"></section> */}\r\n        {/* <section className=\"border-dashed border-2 border-light-blue-500 p-1 overflow-auto\"></section> */}\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(CodeQuestionList)\r\n","import { useRef, useState } from 'react'\r\nimport { useBoolean } from 'react-use'\r\nimport { BsPlus, BsCodeSlash } from 'react-icons/bs'\r\nimport clsx from 'clsx'\r\nimport { FaFingerprint } from 'react-icons/fa'\r\nimport { AiOutlineDisconnect, AiOutlineClose, AiFillCode } from 'react-icons/ai'\r\nimport { DiHtml5Connectivity } from 'react-icons/di'\r\nimport {\r\n  useStore,\r\n  codeEditorFlagToggler,\r\n  setDataFromHostFun,\r\n  setMetaDataFunc,\r\n} from '../../store'\r\nimport SimplePeer from 'simple-peer'\r\nimport useDarkMode from '../../hooks/useDarkMode'\r\nimport CodeAdder from './CodeAdder'\r\nimport CodeQuestionList from './CodeQuestionList'\r\nimport { SENDING_QUESTION, SIGNAL_CODE } from '../../constants'\r\n\r\nconst SideBar = () => {\r\n  const [open, toggleOpen] = useBoolean(false)\r\n  const [codeListOpen, toggleCodeListOpen] = useBoolean(false)\r\n  const [codeAdderOpen, toogleCodeAdderOpen] = useBoolean(false)\r\n  const [globalPeer, setPeer] = useState<SimplePeer.Instance | null>(null)\r\n  const setCodeEditorOpen = useStore(codeEditorFlagToggler)\r\n  const setDataFromHost = useStore(setDataFromHostFun)\r\n  const setMetaData = useStore(setMetaDataFunc)\r\n  const textareaRef = useRef()\r\n  const [enabled] = useDarkMode()\r\n\r\n  const onCodeEditorToggle = () => {\r\n    toogleCodeAdderOpen()\r\n    setCodeEditorOpen(!codeAdderOpen)\r\n    toggleCodeListOpen(false)\r\n  }\r\n\r\n  const onCodeListToggle = () => {\r\n    toogleCodeAdderOpen(false)\r\n    setCodeEditorOpen(!codeListOpen)\r\n    toggleCodeListOpen()\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        'fixed top-0 left-0 h-screen flex flex-col bg-white dark:bg-gray-900 shadow-lg z-10',\r\n        {\r\n          'w-16': !open && !codeAdderOpen && !codeListOpen,\r\n          'w-72': open && !codeAdderOpen && !codeListOpen,\r\n          'w-screen': codeAdderOpen || codeListOpen,\r\n        }\r\n      )}\r\n    >\r\n      <section className={clsx({ hidden: codeAdderOpen || codeListOpen })}>\r\n        {open ? (\r\n          <div className=\"p-4\">\r\n            <div className=\"flex justify-end\">\r\n              <div\r\n                className=\"sidebar-icon margin ml-0 mr-0\"\r\n                onClick={toggleOpen}\r\n              >\r\n                <AiOutlineClose size=\"28\" />\r\n              </div>\r\n            </div>\r\n            <textarea\r\n              className={clsx(\r\n                'appearance-none border-2 dark:bg-gray-900 border-gray-200 rounded w-full py-2 px-4 leading-tight focus:outline-none',\r\n                { 'text-white': enabled, 'text-black': !enabled }\r\n              )}\r\n              placeholder=\"Paste the offer here\"\r\n              rows={20}\r\n              ref={textareaRef as any}\r\n            />\r\n            <div className=\"flex justify-end\">\r\n              <div\r\n                className=\"sidebar-icon margin ml-0 mr-0\"\r\n                onClick={() => {\r\n                  setMetaData({ peer: true })\r\n                  const offer = (textareaRef.current as any)?.value as string\r\n\r\n                  const peer = globalPeer\r\n                    ? globalPeer\r\n                    : new SimplePeer({\r\n                        initiator: false,\r\n                        trickle: false,\r\n                      })\r\n                  peer.signal(JSON.parse(offer))\r\n\r\n                  if (!globalPeer) {\r\n                    peer.on('error', (err) => console.log('error', err))\r\n                    peer.on('signal', (data: any) => {\r\n                      if (data.renegotiate || data.transceiverRequest) {\r\n                        return\r\n                      }\r\n                      console.log('SIGNAL', JSON.stringify(data))\r\n                    })\r\n\r\n                    peer.on('connect', () => {\r\n                      console.log('CONNECT')\r\n                      // setInterval(() => {\r\n                      // peer.send('whatever' + Math.random())\r\n                      // peer.emit('DATA_FROM_PEER', 'whatever' + Math.random())\r\n                      // }, 1000)\r\n                    })\r\n\r\n                    // document.addEventListener(\r\n                    //   SIGNAL_CODE,\r\n                    //   ({ detail }: CustomEventInit<any>) => {\r\n                    //     peer.send(JSON.stringify(detail))\r\n                    //     console.log(detail)\r\n                    //   }\r\n                    // )\r\n                    peer.on('data', (data) => {\r\n                      try {\r\n                        const parsedData = JSON.parse(data)\r\n                        setDataFromHost(parsedData)\r\n                      } catch {}\r\n                    })\r\n                  }\r\n                }}\r\n              >\r\n                <DiHtml5Connectivity />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <SideBarIcon\r\n              icon={<FaFingerprint size=\"28\" />}\r\n              onClick={async () => {\r\n                setMetaData({ host: true })\r\n                const peer = new SimplePeer({\r\n                  // channelName: id,\r\n                  initiator: true,\r\n                  trickle: false,\r\n                })\r\n                setPeer(peer as any)\r\n                peer.on('error', (err) => console.log('error', err))\r\n                peer.on('signal', (data: any) => {\r\n                  if (data.renegotiate || data.transceiverRequest) {\r\n                    return\r\n                  }\r\n                  console.log('SIGNAL', JSON.stringify(data))\r\n                })\r\n\r\n                peer.on('connect', () => {\r\n                  console.log('CONNECT')\r\n                  // setInterval(() => {\r\n                  // peer.emit('DATA_FROM_HOST', '1')\r\n                  // peer.send(`1`)\r\n                  // }, 1000)\r\n                })\r\n\r\n                document.addEventListener(\r\n                  SIGNAL_CODE,\r\n                  ({ detail }: CustomEventInit<any>) => {\r\n                    peer.send(\r\n                      JSON.stringify({\r\n                        question: detail.question,\r\n                        type: SENDING_QUESTION,\r\n                      })\r\n                    )\r\n                  }\r\n                )\r\n\r\n                peer.on('data', (data) => {\r\n                  console.log('data: ' + data)\r\n                })\r\n              }}\r\n              text=\"Click here to generate your id\"\r\n            />\r\n            <Divider />\r\n            <SideBarIcon\r\n              text=\"Click here to join a room\"\r\n              onClick={toggleOpen}\r\n              icon={<BsPlus size=\"32\" />}\r\n            />\r\n            <SideBarIcon\r\n              icon={<BsCodeSlash size=\"20\" />}\r\n              onClick={onCodeEditorToggle}\r\n              text=\"Click here to add questions\"\r\n            />\r\n            <SideBarIcon\r\n              text=\"Click here to see your created and saved questions\"\r\n              onClick={onCodeListToggle}\r\n              icon={<AiFillCode size=\"20\" />}\r\n            />\r\n            <Divider />\r\n            <SideBarIcon\r\n              icon={<AiOutlineDisconnect size=\"22\" />}\r\n              text=\"Disconnect\"\r\n            />\r\n          </>\r\n        )}\r\n      </section>\r\n      {codeListOpen && <CodeQuestionList onCodeListToggle={onCodeListToggle} />}\r\n      {codeAdderOpen && <CodeAdder toogleCodeAdderOpen={onCodeEditorToggle} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SideBarIcon = ({ icon, text = 'tooltip 💡', onClick }: any) => (\r\n  <div className=\"sidebar-icon group\" onClick={onClick ? onClick : null}>\r\n    {icon}\r\n    <span className=\"sidebar-tooltip group-hover:scale-100\">{text}</span>\r\n  </div>\r\n)\r\n\r\nconst Divider = () => <hr className=\"sidebar-hr\" />\r\n\r\nexport default SideBar\r\n","import pouchdbAdapterIdb from 'pouchdb-adapter-idb'\r\nimport { createRxDatabase, getRxStoragePouch, addPouchPlugin } from 'rxdb'\r\nimport { MAIN_COLLECTION } from '../constants'\r\n\r\naddPouchPlugin(pouchdbAdapterIdb)\r\n\r\nexport const init = () => createRxDatabase({\r\n    name: MAIN_COLLECTION,\r\n    storage: getRxStoragePouch('idb'),\r\n})\r\n","export const MAIN_COLLECTION_SCHEMA = {\r\n  title: 'questions schema',\r\n  version: 0,\r\n  description: 'all the questions will be here',\r\n  primaryKey: 'id',\r\n  type: 'object',\r\n  properties: {\r\n    id: {\r\n      type: 'string',\r\n    },\r\n    title: {\r\n      type: 'string',\r\n    },\r\n    markdown: {\r\n      type: 'string',\r\n    },\r\n    toPass: {\r\n      type: 'integer',\r\n      default: 100,\r\n    },\r\n    testCases: {\r\n      type: 'array',\r\n      //   maxItems: 5,\r\n      //   uniqueItems: true,\r\n      items: {\r\n        type: 'object',\r\n        properties: {\r\n          input: {\r\n            type: 'string',\r\n          },\r\n          output: {\r\n            type: 'string',\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n  required: ['title', 'markdown', 'testCases'],\r\n}\r\n","import { useMount } from 'react-use'\nimport Channelbar from './components/ChannelBar'\nimport ContentContainer from './components/ContentContainer'\nimport SideBar from './components/SideBar'\nimport 'tailwindcss/dist/base.css'\nimport 'tailwindcss/dist/components.css'\nimport 'tailwindcss/dist/utilities.css'\nimport { init } from './database'\nimport { MAIN_COLLECTION_SCHEMA } from './database/schema'\nimport { RxDatabase } from 'rxdb'\nimport { Resizable } from 're-resizable'\nimport { useStore, storeDB } from './store'\nimport { MAIN_COLLECTION } from './constants'\n\nexport const style = {\n  display: 'flex',\n  // alignItems: 'center',\n  // justifyContent: 'center',\n  // border: 'solid 1px #ddd',\n  // background: '#f0f0f0',\n}\nconst App = () => {\n  const setDB = useStore(storeDB)\n\n  useMount(() => {\n    init()\n      .then((db: RxDatabase) => {\n        setDB(db)\n        db.addCollections({\n          [MAIN_COLLECTION]: {\n            schema: MAIN_COLLECTION_SCHEMA,\n          },\n        })\n      })\n      .catch(console.error)\n  })\n\n  return (\n    <div className=\"flex\">\n      <SideBar />\n      <div className=\"w-full flex overflow-hidden\">\n        <Resizable\n          style={style}\n          defaultSize={{\n            width: '50%',\n            height: '100vh',\n          }}\n          maxWidth=\"90%\"\n          minWidth=\"20%\"\n        >\n          <Channelbar />\n        </Resizable>\n        <div style={{ minWidth: 20 }} className=\"w-full\">\n          <ContentContainer />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}